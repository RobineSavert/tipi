$smartphone-breakpoint:         0 !default;
$phablet-breakpoint:            400px !default;
$tablet-breakpoint:             640px !default;
$tablet-landscape-breakpoint:   960px !default;
$desktop-breakpoint:            1025px !default;
$widescreen-breakpoint:         1200px !default;
$highroller-breakpoint:         1500px !default;

$breakpoints: (
    smartphone : (
        min-width : $smartphone-breakpoint,
        max-width : ($phablet-breakpoint - 1)
    ),
    phablet : (
        min-width : $phablet-breakpoint,
        max-width : ($tablet-breakpoint - 1)
    ),
    tablet : (
        min-width : $tablet-breakpoint,
        max-width : ($tablet-landscape-breakpoint - 1)
    ),
    tablet-landscape : (
        min-width : $tablet-landscape-breakpoint,
        max-width : ($desktop-breakpoint - 1)
    ),
    desktop : (
        min-width : $desktop-breakpoint,
        max-width : ($widescreen-breakpoint - 1)
    ),
    widescreen : (
        min-width : $widescreen-breakpoint,
        max-width : ($highroller-breakpoint - 1)
    ),
    highroller : (
        min-width : $highroller-breakpoint,
        max-width : false
    )
) !default;

/// Return the min-width or max-width for a specified viewport
///
/// @param { String } $viewport
///     Define the viewport we wan't the properties from
///
/// @param { String } $property
///     The property we wan't to return.
///
/// @example css - CSS Output
///   width: breakpoint('primary', 'light');
///
/// @return { Color }

@function viewport(
    $breakpoint,
    $property: 'min-width'
) {
    @return map-get(map-get($breakpoints, $breakpoint), $property);
}